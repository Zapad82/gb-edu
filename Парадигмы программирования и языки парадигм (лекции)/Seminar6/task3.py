# Бинарный поиск


# Контекст
# Предположим, что мы хотим найти элемент в массиве (получить
# его индекс). Мы можем это сделать просто перебрав все элементы.
# Но что, если массив уже отсортирован? В этом случае можно
# использовать бинарный поиск. Принцип прост: сначала берём
# элемент находящийся посередине и сравниваем с тем, который мы
# хотим найти. Если центральный элемент больше нашего,
# рассматриваем массив слева от центрального, а если больше -
# справа и повторяем так до тех пор, пока не найдем наш элемент.
# ● Ваша задача
# Написать программу на любом языке в любой парадигме для
# бинарного поиска. На вход подаётся целочисленный массив и
# число. На выходе - индекс элемента или -1, в случае если искомого
# элемента нет в массиве.

arr = [0, 1, 2, 3, 4, 5, 6, 7, 8]
n = 3
i_min = 0
i_max = len(arr) - 1

def search(arr, n, i_min, i_max):
    # print(i_min, i_max)
    if i_min > i_max:
        return -1
    mid = (i_max + i_min) // 2
    if arr[mid] == n:
        return mid
    elif arr[mid] > n:
        return search(arr, n, i_min, mid-1)
    elif arr[mid] < n:
        return search(arr, n, mid+1, i_max)

print(search(arr, n, i_min, i_max))